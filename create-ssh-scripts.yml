- hosts: "{{ groups['all'] }}"
  gather_facts: false
  tasks:

    - name: Force evaluation of used host variables
      set_fact:
        eval_ansible_ssh_common_args: "{{ ansible_ssh_common_args | default(omit) }}"
        eval_ansible_connection: "{{ ansible_connection | default(omit) }}"
        eval_ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file | default(omit) }}"
        eval_ansible_host: "{{ ansible_host | default(omit) }}"
        eval_ansible_user: "{{ ansible_user | default(omit) }}"
        eval_ansible_port: "{{ ansible_port | default(omit) }}"

- hosts: 127.0.0.1
  connection: local
  gather_facts: false
  vars:
    dest_dir: "."
    target: "{{ groups['all'] }}"
    ansible_python_interpreter: "{{ansible_playbook_python}}"
  tasks:

    - name: If target is string split it
      set_fact:
        _target: >-
          {{ (target.split(',') if target is string else target)
              if target is defined else
             groups['all']
          }}

    - name: Run python script with ansible interpreter
      script: >-
        {{ playbook_dir }}/ssh-args-to-config.py
        --dest-dir {{ dest_dir | quote }}
        {%if hostvars[item]['eval_ansible_ssh_common_args'] is defined %}
        {{ hostvars[item]['eval_ansible_ssh_common_args'] }}
        {% endif %}
        {%if hostvars[item]['eval_ansible_ssh_private_key_file'] is defined %}
        -i {{ hostvars[item]['eval_ansible_ssh_private_key_file'] | quote }}
        {% endif %}
      args:
        executable: "{{ansible_python_interpreter}}"
      delegate_to: localhost
      register: ssh_config_r
      loop: "{{ _target }}"
      ignore_errors: true

    - name: Populate ssh config
      set_fact:
        ssh_config_valid: "{{ ssh_config_valid | default({}) | combine({item.item: (not item.changed or item.rc == 0)}) }}"
        ssh_config_all_valid: "{{ (ssh_config_all_valid | default(true)) and (not item.changed or item.rc == 0) }}"
        ssh_config: >-
          {{ ssh_config | default({}) |
             combine( {item.item:
                         item.stdout if item.changed and item.rc == 0 else '# ansible_ssh_common_args variable is not defined for host %s' | format(item.item)
                      }
                    )
          }}
      loop: "{{ ssh_config_r.results }}"

    - name: Check ansible_host variable for each host
      fail:
        msg: "Variable ansible_host is not defined for host {{item}}"
      when: >-
        ssh_config_valid[item] and (hostvars[item]['eval_ansible_connection'] | default('ssh', true) in ['ssh', 'network_cli']) and
        hostvars[item]['eval_ansible_host'] is not defined
      loop: "{{ _target }}"

    - name: Check ansible_user variable for each host
      fail:
        msg: "Variable ansible_user is not defined for host {{item}}"
      when: >-
        ssh_config_valid[item] and (hostvars[item]['eval_ansible_connection'] | default('ssh', true) in ['ssh', 'network_cli']) and
        hostvars[item]['eval_ansible_user'] is not defined
      loop: "{{ _target }}"

    - name: Create ssh config file in ssh-config
      copy:
        content: |
          {% for host in _target %}
          {% if ssh_config_valid[host] %}

          {% if hostvars[host]['eval_ansible_connection'] | default('ssh', true) in ['ssh', 'network_cli'] %}
              {% set ansible_host = hostvars[host]['eval_ansible_host'] %}
              {% set ansible_user = hostvars[host]['eval_ansible_user'] %}
              {% set ansible_port = hostvars[host]['eval_ansible_port'] | default(22, true) %}
              {% set ansible_ssh_private_key_file = hostvars[host]['eval_ansible_ssh_private_key_file'] %}

          Host {{ host }}
            HostName {{ ansible_host }}
            User {{ ansible_user }}
            Port {{ ansible_port }}
            UserKnownHostsFile /dev/null
            StrictHostKeyChecking no
            PasswordAuthentication yes
            {# Note: IdentityFile option is output by ssh-args-to-config.py script #}
            {% if ssh_config[host] is defined %}

            # Options extracted from ssh command line arguments :
            {{ ssh_config[host] | indent(width=2) }}
            {% endif %}
            {% endif %}
          {% else %}

          # WARNING: Host {{ host }}:
          #   There was an error while converting ansible_ssh_common_args variable of host {{ host }}
          #   to the SSH configuration with ssh-args-to-config.py script
          #   Possibly some variables are undefined !

          {% endif %}
          {% endfor %}
        dest: "{{ dest_dir }}/ssh-config"
        mode: 0600
    - name: Create run-ssh, run-scp and run-sftp scripts
      copy:
        content: |
          #!/usr/bin/env bash
          THIS_DIR=$( (cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P) )
          set -xe
          {{item}} -F "$THIS_DIR/ssh-config" "$@"
        dest: "{{ dest_dir }}/run-{{item}}.sh"
        mode: 0755
      loop:
        - ssh
        - scp
        - sftp
    - name: Create rsync script in run-rsync.sh
      copy:
        content: |
          #!/usr/bin/env bash
          THIS_DIR=$( (cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P) )
          RSH="ssh -F '$THIS_DIR/ssh-config'"
          set -xe
          rsync -avhe "$RSH" --stats --progress "$@"
        dest: "{{ dest_dir }}/run-rsync.sh"
        mode: 0755
    - debug:
        msg: "Scripts are in directory {{ dest_dir }}"
